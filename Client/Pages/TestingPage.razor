@page "/testingpage"
<h3>TestingPage</h3>
@inject HttpClient httpClient;

<div class="row">
    <div class="col-auto">
        <select class="form-select" @bind="@this.FilterItem">
            <option selected disabled>--Filter--</option>
            @foreach (var r in Continents)
            {
                <option value="@r">@r</option>
            }
        </select>
    </div>
    <div class="col-auto">
        <button class="btn btn-primary" @onclick=this.OnFilter>Filter</button>
    </div>
    <div class="col-2">
    </div>
    <div class="col-auto">

        <select class="form-select" value="@this.FilterAuto" @onchange=this.OnValueChanged>
            <option selected disabled>--Filter--</option>
            @foreach (var r in Continents)
            {
                <option value="@r">@r</option>
            }
        </select>
    </div>
</div>

<div class="mt-3">
    <h2>Filtered List of Countries</h2>
    @foreach (var item in Countries)
    {
        <div>@item.country - @item.continent</div>
    }

</div>

@code {
    private string? FilterAuto;
    private string? FilterItem;

    private IEnumerable<Country> Countries = Enumerable.Empty<Country>();

    private async Task OnValueChanged(ChangeEventArgs e)
    {
        this.FilterAuto = e.Value?.ToString() ?? string.Empty;
        await FilterOnItem(this.FilterAuto);
    }

    private async Task OnFilter()
    => await this.FilterOnItem(this.FilterItem);

    private async Task FilterOnItem(string? value)
    {
        if (value is not null)
        {
            // source country file is https://github.com/samayo/country-json/blob/master/src/country-by-continent.json
            var list = await httpClient.GetFromJsonAsync<IEnumerable<Country>>("sample-data/countries.json") ?? Enumerable.Empty<Country>();
            this.Countries = list.Where(item => item.continent == value);
        }
    }

    private IEnumerable<string> Continents = new List<string> { "Africa", "Asia", "Europe", "Oceania", "North America", "South America" };

    public class Country
    {
        public string country { get; set; } = string.Empty;
        public string continent { get; set; } = string.Empty;
    }
}
